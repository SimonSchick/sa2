local sfind = string.find
local ssub = string.sub
local sgmatch = string.gmatch
local smatch = string.match

local fRead = file.Read
local fWrite = file.Write

local tinsert = table.insert
local tconcat = table.concat

module("ini")

function parse(data)
	local currSection
	local newSection
	local commentPos
	local key, value
	local retTable = {}
	for line in sgmatch(data, "([^\n]+)") do
		commentPos = sfind(line, ";", 1, true)
		if(commentPos) then
			line = ssub(line, 1, commentPos)
		end
		if(line == "") then
			continue
		end
		newSection = smatch(line, "%[([^%[%]]+)%]")
		if(newSection and newSection != "") then
			currSection = newSection
			retTable[currSection] = {}
			continue
		else
			key, value = smatch(line, "([a-zA-Z0-9]+)%s*=%s*([a-zA-Z0-9%s]+)")
			if(!key or !value) then
				continue
			end
			if(currSection) then
				retTable[currSection][key] = value
			else
				retTable[key] = value
			end
		end
	end
	return retTable
end

function make(data)
	local content = {}
	local section, keyvalues, key, value
	for section, keyvalues in next, data do
		tinsert(content, "[" .. section .. "]")
		for key, value in next, keyvalues do
			tinsert(content, key .. "=" .. value)
		end
	end
	return tconcat(content, "\n")
end

function load(name)
	return parse(fRead(name,"DATA"))
end

function save(name, data)
	fWrite(name, ";Config file generated by SpaceAge2\n;SpaceAge2 (c) by Doridian the fox\n\n"..make(data), "DATA")
end